static int AddExp(object_t *op, char *params, const char *command)
{
    int     n;
    char    name[MEDIUM_BUF];
    int     snr,
            exp; // exp parameter can be both here(exp or a skilllevel do adjust) depending on command

    player_t *pl;

    if (!params ||
        (n = sscanf(params, "%s %d %d", name, &snr, &exp)) == 0)
    {
        ndi(NDI_UNIQUE, 0, op, "Usage: %s <name> <skill> <%s>",
            command, (*command == 'a') ? "exp" : "level");

        return COMMANDS_RTN_VAL_OK_SILENT;
    }

    if (!(pl = find_player(name)))
    {
        ndi(NDI_UNIQUE, 0, op, "No such player.");

        return COMMANDS_RTN_VAL_ERROR;
    }

    if (n >= 2 &&
        (snr < 0 ||
         snr >= NROFSKILLS))
    {
        ndi(NDI_UNIQUE, 0, op, "No such skill.");

        return COMMANDS_RTN_VAL_ERROR;
    }

    if (n <= 2)
    {
        int  i;

        for (i = 0; i < NROFSKILLS; i++)
        {
            if (pl->skill_ptr[i])
            {
                ndi(NDI_UNIQUE | NDI_GREEN, 0, op, "%d\t%s (%d/%d)",
                    i, skills[i]->clone.name, pl->skill_ptr[i]->stats.exp,
                    pl->skill_ptr[i]->level);
            }
            else
            {
                ndi(NDI_UNIQUE | NDI_WHITE, 0, op, "%d\t%s",
                    i, skills[i]->clone.name);
            }
        }

        return COMMANDS_RTN_VAL_OK_SILENT;
    }

    if (*command == 's') // "setskill"
    {
        int level = MAX(0, MIN(exp, MAXLEVEL));
        object_t *skill = pl->skill_ptr[snr];

        if (!skill) /* we don't have the skill - learn it*/
        {
            learn_skill(pl->ob, snr);
            skill = pl->skill_ptr[snr];
        }
        else if (!level)/* if level is 0 we unlearn the skill! */
        {


            return COMMANDS_RTN_VAL_OK;
        }

        exp = exp_threshold[level] - skill->stats.exp;
    }

    (void)exp_adjust(pl, snr, exp, EXP_FLAG_NOSCRIPT | EXP_FLAG_NO_BONUS);

    return COMMANDS_RTN_VAL_OK;
}
